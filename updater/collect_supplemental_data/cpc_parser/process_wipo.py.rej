diff a/updater/collect_supplemental_data/cpc_parser/process_wipo.py b/updater/collect_supplemental_data/cpc_parser/process_wipo.py	(rejected hunks)
@@ -83,11 +83,26 @@ def extract_wipo_data(cpc_chunk, cpc_ipc_concordance, ipc_tech_map, config):
         ],
         axis=1)
     # Counter for Each Field ID for each patent
-    wipo_count = wipo_data.groupby(["patent_id",
-                                    "field_id"]).size().to_frame('wipo_count')
+    ### old code ###
+    #wipo_count = wipo_data.groupby(["patent_id",
+    #                                "field_id"]).size().to_frame('wipo_count')
+    ### old code ###
+
+    ### new code
+    wipo_count = wipo_data.groupby(["patent_id", "field_id"]).size().to_frame('wipo_count')
+    wipo_count = wipo_count.reset_index()
+    ### new code
+
     # Retain Top 3 most frequent Wipo field IDs
-    wipo_filtered_data = wipo_count.sort_values("wipo_count").groupby(
-        "patent_id").head(3).reset_index()
+    ### old code ###
+    #wipo_filtered_data = wipo_count.sort_values("wipo_count").groupby(
+    #    "patent_id").head(3).reset_index()
+    ### old code ###
+
+    ### New Code ###
+    wipo_filtered_data = wipo_count.groupby("patent_id").apply(lambda _df: _df.nlargest(3, 'wipo_count', keep='all')).reset_index(drop=True)
+    ### New Code ###
+    
     # Assign Sequence
     wipo_filtered_data_sequenced = wipo_filtered_data.drop(["wipo_count"], axis=1).assign(
         sequence=wipo_filtered_data.groupby(['patent_id']).cumcount())
@@ -106,7 +121,7 @@ def wipo_chunk_processor(cpc_current_data, ipc_tech_field_map, cpc_ipc_concordan
 def consolidate_wipo(config):
     engine = create_engine(get_connection_string(config, "NEW_DB"))
     insert_query = "INSERT IGNORE INTO wipo SELECT  * from {temp_db}.wipo".format(
-        temp_db=config["DATABASES"]["TEMP_UPLOAD_DB"])
+        temp_db=config["DATABASE"]["TEMP_UPLOAD_DB"])
     engine.execute(insert_query)
 
 
